/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vista;

import Controlador.GestionBD;
import Modelo.Cliente;
import Modelo.Mensualidad;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * 
 */
public class Historicos extends javax.swing.JInternalFrame implements Ventana {

    /**
     * Creates new form Ventana1
     */
    public Historicos() {
        initComponents();
        dtm = (DefaultTableModel) tblMensualidades.getModel();
        cargarCombo();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        cmbClientes = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblMensualidades = new javax.swing.JTable();
        btnPagar = new javax.swing.JButton();

        setClosable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Historico");
        setPreferredSize(new java.awt.Dimension(417, 322));
        getContentPane().setLayout(new java.awt.GridBagLayout());

        cmbClientes.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbClientesItemStateChanged(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 357;
        gridBagConstraints.insets = new java.awt.Insets(11, 10, 0, 10);
        getContentPane().add(cmbClientes, gridBagConstraints);

        tblMensualidades.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mensualidad", "Fecha de Pago", "Importe"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblMensualidades);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 362;
        gridBagConstraints.ipady = 215;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(11, 10, 0, 10);
        getContentPane().add(jScrollPane1, gridBagConstraints);

        btnPagar.setText("Pagar");
        btnPagar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPagarActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.insets = new java.awt.Insets(18, 11, 11, 10);
        getContentPane().add(btnPagar, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cmbClientesItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbClientesItemStateChanged
        if(cmbClientes.getSelectedItem()!=null){
         cargarTabla();
        }
    }//GEN-LAST:event_cmbClientesItemStateChanged

    private void btnPagarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPagarActionPerformed
        if (tblMensualidades.getSelectedRow() == -1) {
            JOptionPane.showMessageDialog(this, "NO ai nah sElEcIOnAO");
        } else {
            String mensualidad = (String) dtm.getValueAt(tblMensualidades.getSelectedRow(), 0);
            if (dtm.getValueAt(tblMensualidades.getSelectedRow(), 2) == "") {
                JOptionPane.showMessageDialog(this, "Debes a√±adir el importe de la cuota");
            } else {
                try {

                    double cuota = (double) dtm.getValueAt(tblMensualidades.getSelectedRow(), 2);
                    String dni = ((Cliente) cmbClientes.getSelectedItem()).getDni();
                    switch (GestionBD.pagarMensualidad(dni, mensualidad, cuota)) {
                        case 0:
                            JOptionPane.showMessageDialog(this, "Cuota pagada");
                            cargarTabla();
                            ((Main)getParent().getParent().getParent().getParent().getParent()).recargarHijos();
                            break;
                        case 1:
                            JOptionPane.showMessageDialog(this, "Error en la base de datos");
                            break;
                        case -1:
                            JOptionPane.showMessageDialog(this, "No existe");
                            break;
                    }

                } catch (Exception ex) {
                     JOptionPane.showMessageDialog(this, "La cuota debe ser un numero decimal (XX.XX)");
                }
            }
        }
    }//GEN-LAST:event_btnPagarActionPerformed

    DefaultTableModel dtm;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnPagar;
    private javax.swing.JComboBox<Cliente> cmbClientes;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblMensualidades;
    // End of variables declaration//GEN-END:variables

    @Override
    public void recargarDatos() {
       cargarCombo();
    }

    public void cargarCombo() {
        ArrayList<Cliente> losClientes = GestionBD.getClientes();
        cmbClientes.removeAllItems();
        for (Cliente c : losClientes) {
            cmbClientes.addItem(c);
        }
        cargarTabla();

    }

    public void cargarTabla() {
        dtm.setRowCount(0);
        Cliente seleccionado = (Cliente) cmbClientes.getSelectedItem();
        for (Mensualidad m : GestionBD.getMensualidades(seleccionado.getDni())) {
            dtm.setRowCount(dtm.getRowCount() + 1);
            dtm.setValueAt(m.getMes_ano(), dtm.getRowCount() - 1, 0);
            dtm.setValueAt(m.getFecha(), dtm.getRowCount() - 1, 1);
            dtm.setValueAt(m.getCuota(), dtm.getRowCount() - 1, 2);
        }
    }
}
